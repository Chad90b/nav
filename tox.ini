# This tox configuration is mainly meant for running inside a Docker container,
# based on tests/docker/Dockerfile
# -*- tabs-indent-mode: nil -*-

[tox]
envlist = {unit,integration,functional}-py27-django{17,18}, {unit,integration,functional}-py35-django18, javascript, docs

[tox:jenkins]
toxworkdir = /source/.tox

[testenv]
# Baseline test environment
deps = -rtests/requirements.txt
       -rrequirements/base.txt
       django17: -rrequirements/django.txt
       django18: -rrequirements/django18.txt
       django19: -rrequirements/django19.txt
       django110: -rrequirements/django110.txt
       django111: -rrequirements/django111.txt
       git+https://github.com/sass/libsass-python
setenv =
    PYTHONPATH = {toxinidir}/tests
    BUILDDIR = {envdir}
    CHROME_BIN = /usr/bin/google-chrome
passenv = WORKSPACE DISPLAY
whitelist_externals = /bin/sh ./version.sh
commands =
         unit: pytest -o junit_suite_name="{envname} unit tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --junitxml=reports/{envname}/unit-results.xml --verbose {posargs:tests/unittests}

         integration: python -m nav.django.manage check
         integration: sed -i 's/^#DJANGO_DEBUG.*/DJANGO_DEBUG=True/' {envdir}/etc/nav.conf
         integration: pytest -o junit_suite_name="{envname} integration tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --html reports/{envname}/integration-report.html --junitxml=reports/{envname}/integration-results.xml --verbose --showlocals {posargs:tests/integration}

         functional: sed -i 's/^nav.*=.*INFO/root=DEBUG/' {envdir}/etc/logging.conf
         functional: /sbin/start-stop-daemon -o --stop --quiet --pidfile /var/tmp/xvfb.pid
         functional: /sbin/start-stop-daemon --start --quiet --pidfile /var/tmp/xvfb.pid --make-pidfile --background --exec /usr/bin/Xvfb -- {env:DISPLAY} -screen 0 1024x768x24 -fbdir /var/tmp -ac
         functional: pytest -o junit_suite_name="{envname} functional tests" --junitxml=reports/{envname}/functional-results.xml --verbose --driver Chrome --driver-path=/usr/local/bin/chromedriver --sensitive-url "nothing to see here" --html reports/{envname}/functional-report.html {posargs:tests/functional}
         functional: /sbin/start-stop-daemon --stop --quiet --pidfile /var/tmp/xvfb.pid


[testenv:javascript]
deps =
commands =
         /sbin/start-stop-daemon -o --stop --quiet --pidfile /var/tmp/xvfb.pid
         /sbin/start-stop-daemon --start --quiet --pidfile /var/tmp/xvfb.pid --make-pidfile --background --exec /usr/bin/Xvfb -- {env:DISPLAY} -screen 0 1024x768x24 -fbdir /var/tmp -ac
         {toxinidir}/tests/javascript-test.sh "{toxinidir}"
         /sbin/start-stop-daemon --stop --quiet --pidfile /var/tmp/xvfb.pid

[testenv:pylint]
deps =
    -rtests/requirements.txt
    -rrequirements.txt
description = PyLint run on default environment
setenv = PYLINTHOME = {toxinidir}
commands = {toxinidir}/tests/docker/scripts/pylint.sh python/nav --jobs=4 --rcfile=python/pylint.rc --disable=I,similarities --output-format=parseable

[testenv:docs]
description = Just build the Sphinx documentation
deps =
    -rtests/requirements.txt
    -rrequirements.txt
setenv =
    PYTHONPATH = {toxinidir}/python:{toxinidir}/tests
    DJANGO_SETTINGS_MODULE = nav.django.settings
commands =
         sh -c "make distclean || true"
         ./autogen.sh
         ./configure NAV_USER=build --prefix={envdir} --enable-docs
         make -C python
	 make -C doc
	 sh -c "cd doc; python -c 'import conf; print conf.version' > {toxinidir}/reports/doc_version"
